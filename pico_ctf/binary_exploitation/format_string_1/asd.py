#!/usr/bin/env python3

import sys

def process_dump(filename):
    # Leggi il file
    with open(filename, 'r') as f:
        content = f.read().strip()
    
    # Dividi per ':' e inverti la lista
    parts = content.split(':')
    # parts.reverse()  # Inverti l'ordine delle stringhe
    
    # Pulisci i valori
    hex_values = []
    for part in parts:
        part = part.strip()
        if part != "(nil)" and part:
            # Rimuovi '0x' se presente
            part = part.replace('0x', '')
            hex_values.append(part)
    
    # Converti in bytes e poi in ASCII
    all_bytes = []
    for hex_val in hex_values:
        # Assicurati che la lunghezza sia pari
        if len(hex_val) % 2 != 0:
            hex_val = '0' + hex_val
        
        # Inverti i byte all'interno di ogni valore (little endian)
        bytes_in_chunk = []
        for i in range(0, len(hex_val), 2):
            if i + 1 < len(hex_val):
                byte_hex = hex_val[i:i+2]
                try:
                    byte_val = int(byte_hex, 16)
                    bytes_in_chunk.append(byte_val)
                except ValueError:
                    continue
        
        # Inverti l'ordine dei byte all'interno del chunk
        bytes_in_chunk.reverse()
        all_bytes.extend(bytes_in_chunk)
    
    # Converti in ASCII
    ascii_result = ""
    for byte in all_bytes:
        if 32 <= byte <= 126:  # Caratteri ASCII stampabili
            ascii_result += chr(byte)
        else:
            ascii_result += '.'
    
    print("Rappresentazione ASCII completa:")
    print(ascii_result)

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print(f"Uso: {sys.argv[0]} <nome_file_dump>")
        sys.exit(1)
    
    process_dump(sys.argv[1])
